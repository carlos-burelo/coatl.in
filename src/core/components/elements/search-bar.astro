---
import Modal from './modal.astro'

export interface Props<T> {
    items: T[]
    path: string
}

const { items, path } = Astro.props
---

<header>
    <input type='text' id='fake-searchbar' placeholder='Search...' aria-label='buscar' />
</header>

<Modal id='searchbox'>
    <input type='text' aria-label='searchbox' id='real-searchbar' autocomplete='off' />
    <ul id='results'>
        <a href='/' style='pointer-events: none;'>Comienze a escribir algo</a>
    </ul>
</Modal>

<script is:inline define:vars={{ items, path }}>
    const fakeSearchBar = document.getElementById('fake-searchbar')
    const realSearchBar = document.getElementById('real-searchbar')
    const modal = document.getElementById('searchbox')
    const listOfResults = document.getElementById('results')

    fakeSearchBar.addEventListener('click', () => {
        modal.showModal()
        realSearchBar.autofocus = true
    })

    realSearchBar.addEventListener('input', ({ target }) => {
        const { value } = target
        if (value == '') {
            listOfResults.innerHTML = `<a href='/' style='pointer-events: none;'>No se encontraron resultados</>`
        } else {
            const results = items.filter(i => {
                const item = i.data.title.toLowerCase()
                const query = value.toLowerCase()
                return item.includes(query)
            })
            if (results.length > 0) {
                let htmlResults = ''
                results.forEach(
                    r => (htmlResults += `<a href='${path}/${r.slug}'>${r.data.title}</a>`),
                )
                listOfResults.innerHTML = htmlResults
            }
        }
    })
</script>

<style>
    header {
        display: grid;
        place-content: center;
        padding-block: 1em;
    }
    input#fake-searchbar {
        width: fit-content;
    }
    input#real-searchbar {
        position: sticky;
        top: calc(0.5em + 3px);
    }
    ul {
        display: grid;
        gap: 0.5em;
        transition: all 1s ease-in-out;
    }

    :global(#results a) {
        padding: 0.5em 1em;
        background-color: var(--background-color-emphasis);
        color: var(--primary-color);
        border-radius: 0.5em;
        cursor: pointer;
        animation: pulse ease-in-out;
    }
</style>
