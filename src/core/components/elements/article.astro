---
import { prettyShortDate } from "../../libs/parsers";

export interface Props {
    entry: Post;
    headings: Heading[];
}

const { entry, headings } = Astro.props;
const { title } = entry.data;
const { updatedAt, createdAt } = entry.data;
const isUpdated = updatedAt.getTime() !== createdAt.getTime();
const displayDate = prettyShortDate(isUpdated ? updatedAt : createdAt);
const minutes = Math.ceil(entry.body.split(" ").length / 200);
const readingTime = minutes > 1 ? `${minutes} min` : "1 min";
const dateTime = isUpdated ? updatedAt.toISOString() : createdAt.toISOString();
---

<article>
    <header>
        <h1>{title}</h1>
        <div class="meta">
            <div class="info">
                <div class="date-badge-container">
                    <time datetime={dateTime}>{displayDate}</time>
                    {isUpdated && <span class="badge" title="Actualizado" />}
                </div>
                <span> / </span>
                <span>{readingTime}</span>
            </div>
        </div>
    </header>
    <slot />
</article>

<style>
    h1 {
        font-size: 2em;
        font-weight: 600;
        text-wrap: initial;
    }
    article {
        display: grid;
        gap: 1em;
    }
    :global(h1, h2, h3, h4, h5, h6) {
        scroll-margin-top: 3em;
    }
    h1 {
        margin-top: 3em;
    }
    .meta {
        margin-top: 1em;
        margin-bottom: 2em;
    }
    .info {
        color: var(--foreground-color-paragraph);
        position: relative;
        display: flex;
        align-items: center;
        gap: 1em;
    }
    .meta {
        display: grid;
        gap: 1em;
        grid-auto-flow: column;
        align-items: center;
        justify-content: flex-start;
    }
    .date-badge-container {
        position: relative;
        display: inline-flex;
        align-items: center;
    }
    .badge {
        position: absolute;
        top: -0.25em;
        right: -0.25em;
        width: 8px;
        height: 8px;
        background: var(--primary-color, #e63946);
        border-radius: 50%;
        box-shadow: 0 0 2px rgba(0, 0, 0, 0.15);
    }
</style>
